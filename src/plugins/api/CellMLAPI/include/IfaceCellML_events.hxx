/* This file is automatically generated from CellML_events.idl
 * DO NOT EDIT DIRECTLY OR CHANGES WILL BE LOST!
 */
#ifndef _GUARD_IFACE_CellMLevents
#define _GUARD_IFACE_CellMLevents
#include "cda_compiler_support.h"
#ifdef MODULE_CONTAINS_CellMLevents
#define PUBLIC_CellMLevents_PRE CDA_EXPORT_PRE
#define PUBLIC_CellMLevents_POST CDA_EXPORT_POST
#else
#define PUBLIC_CellMLevents_PRE CDA_IMPORT_PRE
#define PUBLIC_CellMLevents_POST CDA_IMPORT_POST
#endif
#include "Ifacexpcom.hxx"
#include "IfaceDOM_APISPEC.hxx"
#include "IfaceMathML_content_APISPEC.hxx"
#include "IfaceCellML_APISPEC.hxx"
#include "IfaceDOM_events.hxx"
namespace iface
{
  namespace cellml_events
  {
    PUBLIC_CellMLevents_PRE
    class  PUBLIC_CellMLevents_POST MutationEvent
     : public virtual iface::events::Event
    {
    public:
      static const char* INTERFACE_NAME() { return "cellml_events::MutationEvent"; }
      virtual ~MutationEvent() {}
      static const uint16_t MODIFICATION = 1;
      static const uint16_t ADDITION = 2;
      static const uint16_t REMOVAL = 3;
      virtual already_AddRefd<iface::cellml_api::CellMLElement>  relatedElement() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual std::wstring prevValue() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual std::wstring newValue() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual std::wstring attrLocalName() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual std::wstring attrNamespaceURI() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual uint16_t attrChange() throw(std::exception&)  = 0;
    };
  };
};
#undef PUBLIC_CellMLevents_PRE
#undef PUBLIC_CellMLevents_POST
#endif // guard
